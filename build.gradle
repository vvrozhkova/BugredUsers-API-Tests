plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'
    id 'java-library'
}

apply from: "$rootProject.projectDir/dependencies.gradle"

allprojects {
    group 'io.vvrozhkova'
    version '1.0'

    apply plugin: 'java'
    apply plugin: 'io.qameta.allure'
    apply plugin: "java-library"

    repositories {
        mavenCentral()
    }

    allure {
        version = allureVersion
        autoconfigure = true
        aspectjweaver = true
        configuration = "testImplementation"
        useJUnit5 {
            version = allureVersion
        }
    }

    dependencies {
        api(
                deps.junitJupiter,
                deps.owner,
                deps.restAssured,
                deps.aspectjweaver,
                deps.allureAssertj,
                deps.assertjCore,
                deps.javafaker
        )
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    tasks.withType(Test) {
        outputs.upToDateWhen {false}

        systemProperties(System.getProperties())
        useJUnitPlatform()
        //System.setProperty("threads", "5")
        if (System.getProperty("threads") != null) {
            systemProperties += [
                    'junit.jupiter.execution.parallel.enabled'                 : true,
                    'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                    'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                    'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                    'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
            ]
        }
        testLogging {
            lifecycle {
//            events "started", "failed"
                events "started", "skipped", "failed", "standard_error", "standard_out"
                exceptionFormat "short"
            }
        }

    }
}
